{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport request from \"@/utility/request\";\nexport default {\n  mounted() {\n    const cartData = localStorage.getItem('cart');\n    // 如果本地数据有购物车信息，加载数据\n    if (cartData) {\n      this.cart = JSON.parse(cartData);\n    }\n  },\n  beforeDestroy() {\n    // 同步购物车信息到本地数据库\n    localStorage.setItem('cart', JSON.stringify(this.cart));\n  },\n  data() {\n    return {\n      // 购物车存放的商品信息\n      cart: [],\n      //name: string, price: int, quantity: int, selected: bool\n      // 全选按钮是否被选中\n      all_checked: false,\n      //当地时间\n      currentTime: new Date()\n    };\n  },\n  computed: {\n    // 选中商品的总价格\n    priceSum() {\n      return this.cart.reduce((sum, e) => sum + (e.selected ? 1 : 0) * e.price * e.quantity, 0);\n    },\n    // 选中商品的数量\n    countSum() {\n      return this.cart.reduce((sum, e) => sum + (e.selected ? 1 : 0), 0);\n    },\n    getUserID() {\n      return this.$parent.userID;\n    }\n  },\n  methods: {\n    // 从购物车删除某个商品\n    deleteGoods(name) {\n      this.cart = this.cart.filter(item => item.name !== name);\n    },\n    // 全选或取消全选所有商品\n    selectAll() {\n      this.cart.forEach(e => {\n        e.selected = !e.selected;\n      });\n    },\n    // 提交用户订单\n    submitOrder() {\n      let currentTimeVal = this.currentTime.toLocaleString();\n      let OrderList = [];\n      this.cart.forEach(goods => {\n        // 将要购买的商品加入到信息列表，并从购物车删除\n        if (goods.selected === true) {\n          OrderList.push({\n            userID: this.getUserID,\n            productID: goods.productID,\n            productName: goods.name,\n            price: goods.price,\n            quantity: goods.quantity,\n            buyTime: currentTimeVal\n          });\n          // 在购物车删除该商品\n          this.deleteGoods(goods.name);\n        }\n      });\n      if (OrderList.length === 0) {\n        this.$message.error(\"选择数量为0，请选择要购买的商品\");\n      } else {\n        request.post(\"http://localhost:8080/order/add\", OrderList);\n        request.post(\"http://localhost:8080/order/sendEmail\", OrderList);\n        this.$notify.success(\"提交订单成功\");\n      }\n    }\n  }\n};","map":{"version":3,"names":["request","mounted","cartData","localStorage","getItem","cart","JSON","parse","beforeDestroy","setItem","stringify","data","all_checked","currentTime","Date","computed","priceSum","reduce","sum","e","selected","price","quantity","countSum","getUserID","$parent","userID","methods","deleteGoods","name","filter","item","selectAll","forEach","submitOrder","currentTimeVal","toLocaleString","OrderList","goods","push","productID","productName","buyTime","length","$message","error","post","$notify","success"],"sources":["src/views/userSpace/consumer/cartView.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <el-table height=\"400\" :data=\"cart\" border @select-all=\"selectAll()\"\r\n              :highlight-current-row=\"true\" :row-style=\"{height:'75px'}\">\r\n      <el-table-column width=\"40px\" type=\"selection\">\r\n        <template slot-scope=\"{row}\">\r\n          <el-checkbox v-model=\"row.selected\"></el-checkbox>\r\n        </template>\r\n      </el-table-column>\r\n      <el-table-column label=\"商品信息\" prop=\"name\"></el-table-column>\r\n      <el-table-column label=\"商品种类\" prop=\"kind\"></el-table-column>\r\n      <el-table-column label=\"购买数量\" prop=\"quantity\">\r\n        <template slot-scope=\"{row}\">\r\n          <el-input-number :min=\"1\" v-model=\"row.quantity\"></el-input-number>\r\n        </template>\r\n      </el-table-column>\r\n      <el-table-column label=\"单价(￥)\" prop=\"price\"></el-table-column>\r\n      <el-table-column label=\"小计\">\r\n        <template slot-scope=\"{row}\"> {{ row.price * row.quantity }}</template>\r\n      </el-table-column>\r\n      <el-table-column label=\"操作\" prop=\"id\">\r\n        <template slot-scope=\"{row}\">\r\n          <el-popconfirm title=\"确定要删除该商品吗？\" @confirm=\"deleteGoods(row.name)\">\r\n            <el-button slot=\"reference\">删除</el-button>\r\n          </el-popconfirm>\r\n        </template>\r\n      </el-table-column>\r\n    </el-table>\r\n    <div class=\"settlement\" style=\"height: 50px;border: 5px solid #B3C0D1;\">\r\n      <div class=\"amount-sum\">已选择{{ this.countSum }}种商品</div>\r\n      <div class=\"price-sum-amount\">￥总价{{ this.priceSum }}</div>\r\n      <div class=\"btn-area\">\r\n        <el-popconfirm title=\"确定要提交这次订单吗？\" @confirm=\"submitOrder\">\r\n          <el-button slot=\"reference\" size=\"medium\">提交订单</el-button>\r\n        </el-popconfirm>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n<script>\r\n\r\nimport request from \"@/utility/request\";\r\n\r\nexport default {\r\n  mounted() {\r\n    const cartData = localStorage.getItem('cart')\r\n    // 如果本地数据有购物车信息，加载数据\r\n    if (cartData) {\r\n      this.cart = JSON.parse(cartData)\r\n    }\r\n  },\r\n  beforeDestroy() {\r\n    // 同步购物车信息到本地数据库\r\n    localStorage.setItem('cart', JSON.stringify(this.cart))\r\n  },\r\n  data() {\r\n    return {\r\n      // 购物车存放的商品信息\r\n      cart: [], //name: string, price: int, quantity: int, selected: bool\r\n      // 全选按钮是否被选中\r\n      all_checked: false,\r\n      //当地时间\r\n      currentTime: new Date()\r\n    };\r\n  },\r\n  computed: {\r\n    // 选中商品的总价格\r\n    priceSum() {\r\n      return this.cart.reduce((sum, e) => sum + (e.selected ? 1 : 0) * e.price * e.quantity, 0)\r\n    },\r\n    // 选中商品的数量\r\n    countSum() {\r\n      return this.cart.reduce((sum, e) => sum + (e.selected ? 1 : 0), 0)\r\n    },\r\n    getUserID() {\r\n      return this.$parent.userID\r\n    }\r\n  },\r\n  methods: {\r\n    // 从购物车删除某个商品\r\n    deleteGoods(name) {\r\n      this.cart = this.cart.filter(item => item.name !== name)\r\n    },\r\n    // 全选或取消全选所有商品\r\n    selectAll() {\r\n      this.cart.forEach(e => {\r\n        e.selected = !e.selected\r\n      })\r\n    },\r\n    // 提交用户订单\r\n    submitOrder() {\r\n      let currentTimeVal = this.currentTime.toLocaleString()\r\n      let OrderList = []\r\n      this.cart.forEach(goods => {\r\n        // 将要购买的商品加入到信息列表，并从购物车删除\r\n        if (goods.selected === true) {\r\n          OrderList.push({\r\n            userID: this.getUserID, productID: goods.productID, productName: goods.name,\r\n            price: goods.price, quantity: goods.quantity, buyTime: currentTimeVal\r\n          })\r\n          // 在购物车删除该商品\r\n          this.deleteGoods(goods.name)\r\n        }\r\n      })\r\n      if (OrderList.length === 0) {\r\n        this.$message.error(\"选择数量为0，请选择要购买的商品\");\r\n      } else {\r\n        request.post(\"http://localhost:8080/order/add\", OrderList)\r\n        request.post(\"http://localhost:8080/order/sendEmail\", OrderList);\r\n        this.$notify.success(\"提交订单成功\")\r\n      }\r\n    }\r\n  }\r\n}\r\n;\r\n</script>\r\n<style scoped>\r\n\r\n\r\ndiv {\r\n  box-sizing: content-box;\r\n}\r\n\r\n\r\n.settlement div {\r\n  float: left;\r\n  display: inline-block;\r\n  font-size: 30px;\r\n  text-align: center;\r\n  margin: 0 2% 0 1%;\r\n  width: 30%;\r\n}\r\n\r\n\r\n</style>"],"mappings":";AAyCA,OAAAA,OAAA;AAEA;EACAC,QAAA;IACA,MAAAC,QAAA,GAAAC,YAAA,CAAAC,OAAA;IACA;IACA,IAAAF,QAAA;MACA,KAAAG,IAAA,GAAAC,IAAA,CAAAC,KAAA,CAAAL,QAAA;IACA;EACA;EACAM,cAAA;IACA;IACAL,YAAA,CAAAM,OAAA,SAAAH,IAAA,CAAAI,SAAA,MAAAL,IAAA;EACA;EACAM,KAAA;IACA;MACA;MACAN,IAAA;MAAA;MACA;MACAO,WAAA;MACA;MACAC,WAAA,MAAAC,IAAA;IACA;EACA;EACAC,QAAA;IACA;IACAC,SAAA;MACA,YAAAX,IAAA,CAAAY,MAAA,EAAAC,GAAA,EAAAC,CAAA,KAAAD,GAAA,IAAAC,CAAA,CAAAC,QAAA,YAAAD,CAAA,CAAAE,KAAA,GAAAF,CAAA,CAAAG,QAAA;IACA;IACA;IACAC,SAAA;MACA,YAAAlB,IAAA,CAAAY,MAAA,EAAAC,GAAA,EAAAC,CAAA,KAAAD,GAAA,IAAAC,CAAA,CAAAC,QAAA;IACA;IACAI,UAAA;MACA,YAAAC,OAAA,CAAAC,MAAA;IACA;EACA;EACAC,OAAA;IACA;IACAC,YAAAC,IAAA;MACA,KAAAxB,IAAA,QAAAA,IAAA,CAAAyB,MAAA,CAAAC,IAAA,IAAAA,IAAA,CAAAF,IAAA,KAAAA,IAAA;IACA;IACA;IACAG,UAAA;MACA,KAAA3B,IAAA,CAAA4B,OAAA,CAAAd,CAAA;QACAA,CAAA,CAAAC,QAAA,IAAAD,CAAA,CAAAC,QAAA;MACA;IACA;IACA;IACAc,YAAA;MACA,IAAAC,cAAA,QAAAtB,WAAA,CAAAuB,cAAA;MACA,IAAAC,SAAA;MACA,KAAAhC,IAAA,CAAA4B,OAAA,CAAAK,KAAA;QACA;QACA,IAAAA,KAAA,CAAAlB,QAAA;UACAiB,SAAA,CAAAE,IAAA;YACAb,MAAA,OAAAF,SAAA;YAAAgB,SAAA,EAAAF,KAAA,CAAAE,SAAA;YAAAC,WAAA,EAAAH,KAAA,CAAAT,IAAA;YACAR,KAAA,EAAAiB,KAAA,CAAAjB,KAAA;YAAAC,QAAA,EAAAgB,KAAA,CAAAhB,QAAA;YAAAoB,OAAA,EAAAP;UACA;UACA;UACA,KAAAP,WAAA,CAAAU,KAAA,CAAAT,IAAA;QACA;MACA;MACA,IAAAQ,SAAA,CAAAM,MAAA;QACA,KAAAC,QAAA,CAAAC,KAAA;MACA;QACA7C,OAAA,CAAA8C,IAAA,oCAAAT,SAAA;QACArC,OAAA,CAAA8C,IAAA,0CAAAT,SAAA;QACA,KAAAU,OAAA,CAAAC,OAAA;MACA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}